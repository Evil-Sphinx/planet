{"version":3,"file":"static/js/744.7ffd7a16.chunk.js","mappings":"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","sources":["constants/activity.js","views/activity/index.js"],"sourcesContent":["export const activity = [\n  { activityName: '勇闯北邙', point: { 90: 40 }, difficulty: 1, period: [1, 2, 3, 4, 5] },\n  { activityName: '推举孝廉', point: { 90: 5 }, difficulty: 1 },\n  { activityName: '运送物资', point: { 90: 10 }, difficulty: 1, times: 2 },\n  { activityName: '垓下学艺', point: { 90: 5 }, difficulty: 1 },\n  { activityName: '七旗阵', point: { 90: 40 }, difficulty: 1 },\n  { activityName: '灭鼠靖仓', point: { 90: 10 }, difficulty: 1 },\n  { activityName: '谋士大赛', point: { 90: 20 }, difficulty: 1, period: [6] },\n  { activityName: '于吉幻境', point: { 90: 40 }, difficulty: 2, period: [2, 4, 6] },\n  { activityName: '夜探西凉', point: { 90: 80 }, difficulty: 2, period: [0, 1, 3, 5], times: 4 },\n  { activityName: '苍龙的试炼', point: { 90: 20 }, difficulty: 2, period: [0, 2, 4, 6] },\n  { activityName: '击败野外BOSS', point: { 90: 40 }, difficulty: 3 },\n  { activityName: '击败野外怪物', point: { 90: 20 }, difficulty: 3 },\n  { activityName: '“画容道”拼图', point: { 90: 10 }, difficulty: 3 },\n  { activityName: '火烧连营', point: { 90: 15 }, difficulty: 4, times: 3 },\n  { activityName: '七擒七纵', point: { 90: 40 }, difficulty: 4, times: 4 },\n  { activityName: '军团战备收集', point: { 90: 24 }, difficulty: 5, times: 2 },\n  { activityName: '军团任务', point: { 90: 20 }, difficulty: 5, times: 5 },\n  { activityName: '过关斩将', point: { 90: 40 }, difficulty: 6, times: 4 },\n  { activityName: '重镇龙华塔', point: { 90: 60 }, difficulty: 7, period: [0, 6], times: 2 },\n  { activityName: '国令募贤', point: { 90: 60 }, difficulty: 100, times: 2 }\n];\n","import React, { useEffect, useState } from 'react';\nimport { Checkbox, Col, Row, Card, Modal, Input, InputNumber, Button } from 'antd';\nimport { activity } from '@/constants/activity';\n\nimport classNames from 'classnames';\nimport './index.less';\n\nconst { Group } = Checkbox;\n\nconst LEVEL_1 = 180;\nconst LEVEL_2 = 270;\nconst LEVEL_3 = 350;\n\nconst CHECK_BOX_NUM_PER_LINE = 3;\n\nconst Activity = () => {\n  const [playerLevel] = useState(90);\n  const [doubleActivitys, setDoubleActivitys] = useState([]);\n  const [completeActivityModalVisible, setCompleteActivityModalVisible] = useState(false);\n  const [completeActivitys, setCompleteActivitys] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [curActivity, setCurActivity] = useState(null);\n\n  let score = 0;\n\n  const dayOfWeek = new Date().getDay();\n\n  // activity.sort((a, b) => a.difficulty - b.difficulty);\n  // console.log('rank', JSON.stringify(activity));\n  const todayActivity = activity\n    .filter((item) => !item.period || item.period.includes(dayOfWeek))\n    .sort((a, b) => a.difficulty - b.difficulty);\n\n  const handleChooseDoubleActivity = (doubleActivitys) => {\n    setDoubleActivitys(doubleActivitys);\n  };\n\n  useEffect(() => {\n    setCurrentScore(\n      completeActivitys.reduce((pre, cur) => {\n        return pre + (cur.point * cur.times) / cur.totalTimes;\n      }, 0)\n    );\n  }, [completeActivitys]);\n  const handleCompleteActivity = (item) => (e) => {\n    if (e.target.checked) {\n      if (item.times) {\n        setCompleteActivityModalVisible(true);\n        setCurActivity(item);\n        return;\n      }\n\n      setCompleteActivitys([\n        ...completeActivitys,\n        {\n          activityName: e.target.value,\n          times: e.target.checked ? 1 : 0,\n          totalTimes: item.times || 1,\n          point: item.point[playerLevel] * (doubleActivitys.includes(item.activityName) ? 2 : 1)\n        }\n      ]);\n    } else {\n      setCompleteActivitys(\n        completeActivitys.filter((item) => item.activityName !== e.target.value)\n      );\n    }\n  };\n\n  const handleCompleteActivityTimes = (times) => {\n    setCompleteActivitys([\n      ...completeActivitys,\n      {\n        activityName: `_${curActivity.activityName}`,\n        times: times,\n        totalTimes: curActivity.times || 1,\n        point:\n          curActivity.point[playerLevel] *\n          (doubleActivitys.includes(curActivity.activityName) ? 2 : 1)\n      }\n    ]);\n    setCompleteActivityModalVisible(false);\n  };\n  return (\n    <div className=\"activityWrap\">\n      <div className=\"pointWrap\">{currentScore}</div>\n      <div className=\"checkBoxWrap\">\n        <Card>\n          <Group onChange={handleChooseDoubleActivity}>\n            <Row>\n              {Array.from(\n                { length: Math.ceil(todayActivity.length / CHECK_BOX_NUM_PER_LINE) },\n                (_, index) =>\n                  todayActivity.slice(\n                    index * CHECK_BOX_NUM_PER_LINE,\n                    (index + 1) * CHECK_BOX_NUM_PER_LINE\n                  )\n              ).map((activitys) =>\n                activitys.map((item, index) => {\n                  const currentScore = (score += doubleActivitys.includes(item.activityName)\n                    ? item.point[playerLevel] * 2\n                    : item.point[playerLevel]);\n                  return (\n                    <Col key={index} span={24 / CHECK_BOX_NUM_PER_LINE}>\n                      <Checkbox value={item.activityName} style={{ fontSize: 'large' }}>\n                        <span\n                          className={classNames({\n                            cold: currentScore < LEVEL_1,\n                            ordinary: currentScore >= LEVEL_1 && currentScore < LEVEL_2,\n                            hot: currentScore >= LEVEL_2 && currentScore < LEVEL_3,\n                            excellent: currentScore >= LEVEL_3\n                          })}>\n                          {item.activityName}\n                        </span>\n\n                        {item.times && (\n                          <span className=\"pointDes\">{`(${\n                            (item.point[playerLevel] / item.times) *\n                            (doubleActivitys.includes(item.activityName) ? 2 : 1)\n                          } 分 / ${item.times}次)`}</span>\n                        )}\n\n                        {!item.times && (\n                          <span className=\"pointDes\">{`(${\n                            item.point[playerLevel] *\n                            (doubleActivitys.includes(item.activityName) ? 2 : 1)\n                          } 分)`}</span>\n                        )}\n\n                        <span className=\"scoreDes\">{currentScore}</span>\n                      </Checkbox>\n\n                      <Checkbox\n                        value={`_${item.activityName}`}\n                        onClick={handleCompleteActivity(item)}\n                      />\n                    </Col>\n                  );\n                })\n              )}\n            </Row>\n          </Group>\n        </Card>\n\n        {completeActivityModalVisible && (\n          <CompleteActivityModal\n            visible={completeActivityModalVisible}\n            onOK={handleCompleteActivityTimes}\n            onCancel={() => {\n              setCompleteActivityModalVisible(false);\n            }}\n            maxTimes={curActivity.times}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst CompleteActivityModal = (props) => {\n  const { visible, onOK, onCancel, maxTimes } = props;\n\n  const [times, setTimes] = useState(maxTimes);\n\n  const onChange = (value) => {\n    setTimes(Math.min(value, maxTimes));\n  };\n\n  const onOk = () => {\n    onOK(times);\n  };\n\n  return (\n    <Modal\n      centered\n      open={visible}\n      onCancel={onCancel}\n      width={200}\n      footer={null}\n      closable={false}\n      destroyOnClose>\n      <div className=\"completeModal\">\n        <h1>完成次数</h1>\n        <InputNumber onChange={onChange} max={maxTimes} min={1} value={times} />\n        <Button\n          onClick={onOk}\n          type=\"primary\"\n          style={{\n            marginTop: '10px'\n          }}>\n          完成\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Activity;\n"],"names":["activity","activityName","point","difficulty","period","times","Group","Checkbox","CompleteActivityModal","props","visible","onOK","onCancel","maxTimes","setTimes","useState","_jsx","Modal","centered","open","width","footer","closable","destroyOnClose","children","_jsxs","className","InputNumber","onChange","value","Math","min","max","Button","onClick","onOk","type","style","marginTop","Activity","playerLevel","doubleActivitys","setDoubleActivitys","completeActivityModalVisible","setCompleteActivityModalVisible","completeActivitys","setCompleteActivitys","currentScore","setCurrentScore","curActivity","setCurActivity","score","dayOfWeek","Date","getDay","todayActivity","filter","item","includes","sort","a","b","useEffect","reduce","pre","cur","totalTimes","handleCompleteActivity","e","target","checked","Card","Row","Array","from","length","ceil","_","index","slice","map","activitys","Col","span","fontSize","classNames","cold","ordinary","hot","excellent","concat"],"sourceRoot":""}